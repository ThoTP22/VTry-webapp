name: SonarQube Code Analysis

on:
  # Trigger analysis on push to main and pull requests
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          frontend-new/package-lock.json

    - name: Install Backend Dependencies
      working-directory: ./backend
      run: npm ci

    - name: Install Frontend Dependencies
      working-directory: ./frontend-new
      run: npm ci

    - name: Run Backend Tests (if available)
      working-directory: ./backend
      run: |
        if npm run test --if-present; then
          echo "Backend tests completed"
        else
          echo "No backend tests found, skipping..."
        fi
      continue-on-error: true

    - name: Run Frontend Tests (if available)
      working-directory: ./frontend-new
      run: |
        if npm run test --if-present -- --coverage --watchAll=false; then
          echo "Frontend tests completed with coverage"
        else
          echo "No frontend tests found, skipping..."
        fi
      continue-on-error: true

    - name: Build Backend
      working-directory: ./backend
      run: |
        if npm run build --if-present; then
          echo "Backend build successful"
        else
          echo "No backend build script found, skipping..."
        fi
      continue-on-error: true

    - name: Build Frontend
      working-directory: ./frontend-new
      run: |
        if npm run build --if-present; then
          echo "Frontend build successful"
        else
          echo "No frontend build script found, skipping..."
        fi
      continue-on-error: true

    - name: SonarQube Scan
      uses: sonarqube-quality-gate-action@master
      with:
        scanMetadataReportFile: target/sonar/report-task.txt
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: SonarQube Scanner
      uses: kitabisa/sonarqube-action@v1.2.0
      with:
        host: ${{ secrets.SONAR_HOST_URL }}
        login: ${{ secrets.SONAR_TOKEN }}

  # Alternative using official SonarSource scanner
  sonar-scanner:
    name: SonarQube Scanner (Alternative)
    runs-on: ubuntu-latest
    if: false  # Disable this job initially, enable if needed
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Cache SonarQube packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Install and run SonarQube Scanner
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        npm install -g sonarqube-scanner
        sonar-scanner \
          -Dsonar.projectKey=${{ vars.SONAR_PROJECT_KEY }} \
          -Dsonar.organization=${{ vars.SONAR_ORGANIZATION }} \
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.sources=backend/src,frontend-new/src \
          -Dsonar.exclusions=**/node_modules/**,**/coverage/**,**/dist/**,**/build/** \
          -Dsonar.javascript.lcov.reportPaths=frontend-new/coverage/lcov.info \
          -Dsonar.typescript.lcov.reportPaths=backend/coverage/lcov.info